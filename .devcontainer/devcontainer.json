// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.166.1/containers/docker-existing-dockerfile
{
	"name": "STM32 build env",
	
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": 
	{ 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions":
	[
		"ms-vscode.cpptools",		// C/C++ tools
		"marus25.cortex-debug",		// CORTEX DEBUGGING
		"twxs.cmake",				// CMAKE
		"ms-vscode.cmake-tools"		// CMAKE
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": 
	[
		4000,		// For VS code remote debugging
		19020		// Segger J-Scope remote
	],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	"mounts": [ "source=/var/run/docker.sock,target=/workspace/cker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	//"remoteUser": "vscode"

	// Stop container after VS code is exits
	"shutdownAction":"stopContainer",

	// Start Segger Remot 
	//"postStartCommand":["C:\\Program Files (x86)\\SEGGER\\JLink\\JLinkRemoteServer.exe"],
}
